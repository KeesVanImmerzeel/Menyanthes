library(devtools)
use_package("raster")
use_package(sp)
crsAfoort <- sp::CRS("+init=epsg:28992") # epsg projection 28992 - amersfoort
devtools::use_data(crsAfoort,internal=TRUE)
use_data(crsAfoort,internal=TRUE)
path.expand("~")
file.path("~","filename.shp")
"~" %>% path.expand() %>% file.path("filename.shp")
normalizePath("~","filename.shp")
normalizePath("~")
file.path(path.expand("~"),"filename.shp")
document()
library(menyanthes)
use_package("sp")
document()
library(menyanthes)
?proj4string
use_package("rgdal")
document()
document()
library(menyanthes)
library(menyanthes)
document()
library(menyanthes)
#library(dplyr)
#library(lubridate)
library(magrittr)
library(raster)
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
hm <- readRDS("hm.rds")
# Maak plots van de gegevens
plts <- hm %>% menyanthes::hm_plot()
str(plts)
plts$NAME
plts$plots
load_all()
library(devtools)
load_all()
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm <- hm_read_export_csv( fname )
hm$xd$FILTER %<>% as.factor()
hm$xd %>% dplyr::group_by(NAME)
test <-   suppressWarnings(
hm$xd %>% dplyr::group_by(NAME) %>% dplyr::do(
plots = ggplot2::ggplot(data = .) +
ggplot2::aes(x = DATE, y = HEAD, color = FILTER) +
ggplot2::geom_point() +
ggplot2::ggtitle(unique(.$NAME))
)
)
test$NAME
test$plots[[1]]
library(devtools)
load_all()
use_package("ggplot2")
document()
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm <- hm_read_export_csv( fname )
x <- hm_plot(hm)
x <- hm_plot(hm,file.path("~","plots"))
file.path("~","plots")
x <- hm_plot(hm,file.path(path.expand("~"),"plots"))
file.path(path.expand("~"),"plots")
library(devtools)
library(devtools)
load_all()
hm <- hm_rbind(hm1, hm2)
load_all()
hm <- hm_rbind(hm1, hm2)
load_all()
hm <- hm_rbind(hm1, hm2)
load_all()
hm <- hm_rbind(hm1, hm2)
load_all()
hm <- hm_rbind(hm1, hm2)
?lapply
load_all()
hm <- hm_rbind(hm1, hm2)
hm <- hm_rbind(hm1, hm2, hm1)
document()
library(menyanthes)
library(devtools)
load_all()
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
con <- file(fname, "r")
x <- readLines(con, 1)
head(x)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con)
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1
is_obs_well_file <- FALSE
while (TRUE) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if ((i == 100) || (found)) {
break
}
i <- i + 1
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
con <- file(fname, "r")
x <- readLines(con, warn = FALSE)
close(con)
i <- which(grepl("^;;", x))
# Determine column names of metadata and data
names_xm <- x[i[1] + 1] %>% strsplit(";") %>% unlist()
names_xd <- x[i[2] + 1] %>% strsplit(";") %>% unlist()
names_xm
xm <- read.csv2(
fname,
header = FALSE,
sep = ";",
quote = "\"",
fill = TRUE,
skip = i[1] + 2,
row.names = NULL
)
xm
names(xm)
xm$V19 <- NULL
names(xm) <- names_xm
head(xm)
str(xm$SurfaceLevel)
range(xm$SurfaceLevel)
hm <- hm1
hm$xd$FILTER %<>% as.factor()
str(hm)
x <- suppressWarnings(
hm$xd %>% dplyr::group_by(NAME) %>% dplyr::do(
plots = ggplot2::ggplot(data = .) +
ggplot2::aes(x = DATE, y = HEAD, color = FILTER) +
ggplot2::geom_point() +
ggplot2::geom_line() +
ggplot2::ggtitle(unique(.$NAME))
)
)
str(x)
x$NAME
head(hm$xd)
hm$xd %>% dplyr::group_by(NAME) %>% dplyr::do(print(.))
test <- dplyr::full_join(hm$xd,hm$xm, by=c("NAME","FILTER"))
hm <- hm1
test <- dplyr::full_join(hm$xd,hm$xm, by=c("NAME","FILTER"))
str(test)
head(test)
load_all()
?data.frame
load_all()
?do
hm$xm %>% dplyr::group_by(NAME) %>% dplyr::do(mv=data.frame(yintercept=.$MV, MV=factor(.$MV))
)
str(test)
load_all()
load_all()
hm <- hm1
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x$plots[[1]]
hm <- hm1
x <- hm_plot(hm)
x$plots[[1]]
load_all()
hm <- hm1
x <- hm_plot(hm)
x$plots[[1]]
load_all()
hm <- hm1
x <- hm_plot(hm)
x$plots[[1]]
head(hm$xm)
?geom_hline
load_all()
hm <- hm1
x <- hm_plot(hm)
x$plots[[1]]
?annotate
hm <- hm1
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x$plots[[1]]
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
x$plots[[2]]
head(hm$xm)
head(hm$xm,20)
?menyanthes
test <- hm_rm_dble_fltrs(hm)
head(test,20)
test <- hm_rm_dble_fltrs(hm)
head(test)
head(test$xm,20)
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm1 <- hm_read_export_csv( fname )
head(hm1,10)
head(hm1$xm,10)
hm1 %<>%hm_rm_dble_fltrs()
head(hm1,10)
head(hm1$xm,10)
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm1 <- hm_read_export_csv( fname )
hm2
use_data(hm1)
use_data(hm1,overwrite=TRUE)
fname <- system.file("extdata","Topsoil1.csv",package="menyanthes")
hm2 <- hm_read_export_csv2( fname )
use_data(hm2,overwrite=TRUE)
library(menyanthes)
.libPaths()
library(menyanthes)
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm1 <- hm_read_export_csv( fname )
?use_data
use_data(hm1,internal=TRUE,overwrite=TRUE)
fname <- system.file("extdata","Topsoil1.csv",package="menyanthes")
hm2 <- hm_read_export_csv2( fname )
use_data(hm2,internal=TRUE,overwrite=TRUE)
detach("package:menyanthes", unload = TRUE)
library(menyanthes)
library(devtools)
library(menyanthes)
load_all()
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm1 <- hm_read_export_csv( fname )
use_data(hm1,overwrite=TRUE)
fname <- system.file("extdata","Topsoil1.csv",package="menyanthes")
hm2 <- hm_read_export_csv2( fname )
use_data(hm2,overwrite=TRUE)
library(menyanthes)
library(sp)
crsAfoort <- sp::CRS("+init=epsg:28992") # epsg projection 28992 - amersfoort
use_data(crsAfoor,internal=TRUE,overwrite=TRUE)
use_data(crsAfoort,internal=TRUE,overwrite=TRUE)
document()
library(menyanthes)
hm <- hm1
x <- hm_plot(hm)
x$plots[[1]]
x$plots[[2]]
library(ggplot2)
?ggsave
library(ggplot2)
library(ggplot2)
?geom_hline()
library(devtools)
load_all()
hm <- hm1
x <- hm_plot(hm)
x$plots[[1]]
load_all()
x <- hm_plot(hm)
x$plots[[1]]
library(menyanthes)
x <- hm_plot(hm)
x$plots[[1]]
x <- hm_plot(hm)
library(menyanthes)
x <- hm_plot(hm)
x$plots[[1]]
library(menyanthes)
x <- hm_plot(hm)
x$plots[[1]]
library(devtools)
load_all()
hm <- hm1
filename <- file.path(path.expand("~"),"filename.shp")
hm_create_shp_file(hm, filename)
x <- hm$xm
str(x)
x %>% group_by(NAME)
x %>% dplyr::group_by(NAME) %>% dplyr::summarise(NFILTRS=dplyr::n())
x %>% dplyr::group_by(NAME) %>% dplyr::summarise(X=mean(X), NFILTRS=dplyr::n())
x %>% dplyr::group_by(NAME) %>% dplyr::summarise(NFILTRS=dplyr::n())
x %>% dplyr::group_by(NAME) %>% dplyr::summarise(X=mean(X), NFILTRS=dplyr::n())
x %>% dplyr::group_by(NAME) %>% dplyr::summarise(X=mean(X), Y=mean(Y), NFILTRS=dplyr::n())
test <- x %>% dplyr::group_by(NAME) %>% dplyr::summarise(X=mean(X), Y=mean(Y), NFILTRS=dplyr::n())
str(test)
str(x)
test <- x %>% dplyr::group_by(NAME) %>% dplyr::summarise(X=mean(X), Y=mean(Y), NFILTRS=dplyr::n(), TOP=max(TOP), BOT=min(BOT))
str(test)
test <-
x %>% dplyr::group_by(NAME) %>% dplyr::summarise(
X = mean(X),
Y = mean(Y),
NFILTRS = dplyr::n(),
TOP = max(TOP),
BOT = min(BOT),
MV = mean(MV, na.rm = TRUE)
)
str(test)
load_all()
hm <- hm1
filename <- file.path(path.expand("~"),"filename.shp")
hm_create_shp_file(hm, filename)
document()
library(menyanthes)
head(hm1$xm)
hm <- hm1
# Bereken GxG's en voeg de waarden toe aan de gegevens van de peilbuizen.
AHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(AHG=quantile(HEAD,.9985,na.rm = TRUE))
AHG
hm$xd %>% dplyr::group_by(NAME, FILTER)
hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
MV = mean(MV, na.rm = TRUE)
)
hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
MV = mean(MV, na.rm = TRUE)
)
test <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
MV = mean(MV, na.rm = TRUE)
)
test <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
MV = mean(MV, na.rm = TRUE)
)
head(test)
AHG
hm$xm %<>% dplyr::left_join(AHG) %>% dplyr::left_join(MHG) %>% dplyr::left_join(GHG) %>% dplyr::left_join(GG) %>% dplyr::left_join(GLG) %>%
dplyr::left_join(MLG) %>% dplyr::left_join(ALG)
MHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(MHG=quantile(HEAD,.977,na.rm = TRUE))
GHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(GHG=quantile(HEAD,.841,na.rm = TRUE))
GG  <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(GG=quantile(HEAD,.5,na.rm = TRUE))
GLG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(GLG=quantile(HEAD,.159,na.rm = TRUE))
MLG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(MLG=quantile(HEAD,.023,na.rm = TRUE))
ALG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(ALG=quantile(HEAD,.0015,na.rm = TRUE),n=n())
AHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(AHG=quantile(HEAD,.9985,na.rm = TRUE))
MHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(MHG=quantile(HEAD,.977,na.rm = TRUE))
GHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(GHG=quantile(HEAD,.841,na.rm = TRUE))
GG  <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(GG=quantile(HEAD,.5,na.rm = TRUE))
GLG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(GLG=quantile(HEAD,.159,na.rm = TRUE))
MLG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(MLG=quantile(HEAD,.023,na.rm = TRUE))
ALG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(ALG=quantile(HEAD,.0015,na.rm = TRUE),n=dplyr::n())
hm$xm %<>% dplyr::left_join(AHG) %>% dplyr::left_join(MHG) %>% dplyr::left_join(GHG) %>% dplyr::left_join(GG) %>% dplyr::left_join(GLG) %>%
dplyr::left_join(MLG) %>% dplyr::left_join(ALG)
str(hm$xm)
hm$xm %<>% dplyr:mutate(AHG_MV = MV-AHG)
library(magrittr)
hm$xm %<>% dplyr:mutate(AHG_MV = MV-AHG)
hm$xm %<>% dplyr::mutate(AHG_MV = MV-AHG)
str(hm$xm)
load_all()
hm_calc_gxg(hm1)
hm <- hm1
hm %<>% hm_calc_gxg()
str(hm)
hm <- hm1
str(hm)
str(hm$xm)
gxg_s <- hm %>% hm_calc_gxg()
gxg_s
test <- gxg_s %>% dplyr::group_by(NAME)
test
test <- gxg_s %>% dplyr::group_by(NAME) %>% mutate(i=dplyr::row_number)
test <- gxg_s %>% dplyr::group_by(NAME) %>% dplyr::mutate(i=dplyr::row_number)
test <- gxg_s %>% dplyr::group_by(NAME) %>% dplyr::mutate(id=dplyr::row_number)
test <- gxg_s %>% dplyr::group_by(NAME) %>% dplyr::mutate(id=dplyr::row_number())
str(test)
test <- gxg_s %>% dplyr::group_by(NAME)
test
test <- gxg_s %>% dplyr::group_by(NAME) %>% dplyr::filter(ties.method="first"==1)
test <- gxg_s %>% dplyr::group_by(NAME) %>% dplyr::filter(rank(ties.method="first"==1))
test <- gxg_s %>% dplyr::group_by(NAME) %>% filter(rank(ties.method="first"==1))
test <- gxg_s %>% dplyr::group_by(NAME)
test2 <- filter(test, rank(ties.method="first"==1))
test
?rank
test2 <- filter(test, rank(test, ties.method="first"==1))
gxg_s <- hm %>% hm_calc_gxg()
test <- gxg_s %>% dplyr::group_by(NAME) %>% dplyr::slice(which.min(FILTER))
head(test)
test$NAME
x <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
X = mean(X),
Y = mean(Y),
NFILTRS = dplyr::n(),
TOP = max(TOP),
BOT = min(BOT),
MV = mean(MV, na.rm = TRUE)
)
str(x)
x %<>% full_join(x,gxg_s,by="NAME")
x %<>% dplyr::full_join(x,gxg_s,by="NAME")
str(x)
gxg_s <- hm %>% hm_calc_gxg() %>% dplyr::group_by(NAME) %>% dplyr::slice(which.min(FILTER))
x <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
X = mean(X),
Y = mean(Y),
NFILTRS = dplyr::n(),
TOP = max(TOP),
BOT = min(BOT),
MV = mean(MV, na.rm = TRUE)
)
x %<>% dplyr::right_join(x,gxg_s,by="NAME")
str(x)
?left_join
str(gxg_s)
x <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
X = mean(X),
Y = mean(Y),
NFILTRS = dplyr::n(),
TOP = max(TOP),
BOT = min(BOT),
MV = mean(MV, na.rm = TRUE)
)
names(x)
x %<>% dplyr::left_join(gxg_s,by="NAME")
str(x)
gxg_s <- hm %>% hm_calc_gxg() %>% dplyr::group_by(NAME) %>% dplyr::slice(which.min(FILTER))
gxg_s
gxg_s <- hm %>% hm_calc_gxg() %>% dplyr::group_by(NAME) %>% dplyr::slice(which.min(FILTER))
gxg_s <- gxg_s[,-c("X","y","TOP","BOT","MV")]
gxg_s <- hm %>% hm_calc_gxg() %>% dplyr::group_by(NAME) %>% dplyr::slice(which.min(FILTER))
gxg_s <- gxg_s[,-c("X","y","TOP","BOT","MV")]
names(gxg_s)
gxg_s <- gxg_s[,!names(dat) %in% c("X","y","TOP","BOT","MV")]
gxg_s %<>% gxg_s[,!names(.) %in% c("X","y","TOP","BOT","MV")]
gxg_s <- gxg_s[,!names(gxg_s) %in% c("X","y","TOP","BOT","MV")]
gxg_s
gxg_s <- hm %>% hm_calc_gxg() %>% dplyr::group_by(NAME) %>% dplyr::slice(which.min(FILTER))
gxg_s <- gxg_s[,!names(gxg_s) %in% c("X","Y","TOP","BOT","MV","FILTER")]
x <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
X = mean(X),
Y = mean(Y),
NFILTRS = dplyr::n(),
TOP = max(TOP),
BOT = min(BOT),
MV = mean(MV, na.rm = TRUE)
)
x %<>% dplyr::left_join(gxg_s,by="NAME")
str(x)
gxg_s <- hm %>% hm_calc_gxg() %>% dplyr::group_by(NAME) %>% dplyr::slice(which.min(FILTER))
gxg_s <- gxg_s[,!names(gxg_s) %in% c("X","Y","TOP","BOT","MV","FILTER")]
gxg_s
load_all()
hm_gxg_table(hm)
names(hm_gxg_table(hm))
document()
test <- hm_gxg_table(hm)
str(test)
test$NAME
load_all()
hm_gxg_table(hm1)
gxg_table <- hm %>% hm_gxg_table()
x <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
X = mean(X),
Y = mean(Y),
NFILTRS = dplyr::n(),
TOP = max(TOP),
BOT = min(BOT),
MV = mean(MV, na.rm = TRUE)
)
x %<>% dplyr::left_join(gxg_table,by="NAME")
str(x)
gxg_table <- hm %>% hm_gxg_table()
names(gxg_table)
x <- hm$xm %>% dplyr::group_by(NAME) %>% dplyr::summarise(
X = mean(X),
Y = mean(Y),
NFILTRS = dplyr::n(),
TOP = max(TOP),
BOT = min(BOT),
MV = mean(MV, na.rm = TRUE)
)
names(x)
document()
