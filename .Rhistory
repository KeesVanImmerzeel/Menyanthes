skip = i[2],
nrows = i[3]-i[2]-2,
row.names = NULL
)
xm <-
data.frame(
NAME = xm$Locatie,
FILTER = xm$Filternummer,
X = xm$X.coordinaat,
Y = xm$Y.coordinaat,
TOP = xm$Bovenkant.filter..cm.t.o.v..NAP.,
BOT = xm$Onderkant.filter..cm.t.o.v..NAP.,
MV = xm$Maaiveld..cm.t.o.v..NAP.
)
xm %>% dplyr::mutate(TOP=TOP/100)
xm %>% dplyr::mutate(BOT=BOT/100)
xm %>% dplyr::mutate(MV=MV/100)
lns <- readLines(fname)
i <- which(lns=="")
xm <- read.csv2(
fname,
header = TRUE,
sep = ",",
quote = "\"",
fill = TRUE,
skip = i[2],
nrows = i[3]-i[2]-2,
row.names = NULL
)
xm <-
data.frame(
NAME = xm$Locatie,
FILTER = xm$Filternummer,
X = xm$X.coordinaat,
Y = xm$Y.coordinaat,
TOP = xm$Bovenkant.filter..cm.t.o.v..NAP.,
BOT = xm$Onderkant.filter..cm.t.o.v..NAP.,
MV = xm$Maaiveld..cm.t.o.v..NAP.
)
xm %>% dplyr::mutate(TOP=TOP/100)
xm %>% dplyr::mutate(BOT=BOT/100)
xm %>% dplyr::mutate(MV=MV/100)
xm
lns <- readLines(fname)
i <- which(lns=="")
xm <- read.csv2(
fname,
header = TRUE,
sep = ",",
quote = "\"",
fill = TRUE,
skip = i[2],
nrows = i[3]-i[2]-2,
row.names = NULL
)
xm <-
data.frame(
NAME = xm$Locatie,
FILTER = xm$Filternummer,
X = xm$X.coordinaat,
Y = xm$Y.coordinaat,
TOP = xm$Bovenkant.filter..cm.t.o.v..NAP.,
BOT = xm$Onderkant.filter..cm.t.o.v..NAP.,
MV = xm$Maaiveld..cm.t.o.v..NAP.
)
xm %>% dplyr::mutate(TOP=TOP/100)
xm %>% dplyr::mutate(BOT=BOT/100)
xm %>% dplyr::mutate(MV=MV/100)
xm
xm %<>% dplyr::mutate(TOP=TOP/100)
xm %<>% dplyr::mutate(BOT=BOT/100)
xm %<>% dplyr::mutate(MV=MV/100)
xm
xm$X %<>% as.numeric(.)
xm$X
str(xm)
xm %<>% dplyr::arrange(NAME, FILTER)
i
regelnr_kop_stijghoogten <- which( str_detect(lns, "Opmerking") )
i <- regelnr_kop_stijghoogten +1
date_strings <-
sapply(lns[i:length(lns)], function(x) {
s <-
str_split(x, ",") %>% unlist() %>% .[3];
}, simplify=TRUE, USE.NAMES=FALSE)
head_strings <-
sapply(lns[i:length(lns)], function(x) {
s <-
str_split(x, ",") %>% unlist() %>% .[6];
}, simplify=TRUE, USE.NAMES=FALSE)
names_strings <-
sapply(lns[i:length(lns)], function(x) {
s <-
str_split(x, ",") %>% unlist() %>% .[1];
}, simplify=TRUE, USE.NAMES=FALSE)
filters_strings <-
sapply(lns[i:length(lns)], function(x) {
s <-
str_split(x, ",") %>% unlist() %>% .[2];
}, simplify=TRUE, USE.NAMES=FALSE)
i
i[4]
?str_split
date_strings <-
sapply(lns[i:length(lns)], function(x) {
s <-
strsplit(x, ",") %>% unlist() %>% .[3];
}, simplify=TRUE, USE.NAMES=FALSE)
date_strings
i
j <- i[4] + 2
date_strings <-
sapply(lns[j:length(lns)], function(x) {
s <-
strsplit(x, ",") %>% unlist() %>% .[3];
}, simplify=TRUE, USE.NAMES=FALSE)
date_strings
date_strings <-
sapply(lns[j:length(lns)], function(x) {
s <-
strsplit(x, ",") %>% unlist() %>% .[3];
}, simplify=TRUE, USE.NAMES=FALSE)
head_strings <-
sapply(lns[j:length(lns)], function(x) {
s <-
strsplit(x, ",") %>% unlist() %>% .[6];
}, simplify=TRUE, USE.NAMES=FALSE)
names_strings <-
sapply(lns[j:length(lns)], function(x) {
s <-
strsplit(x, ",") %>% unlist() %>% .[1];
}, simplify=TRUE, USE.NAMES=FALSE)
filters_strings <-
sapply(lns[j:length(lns)], function(x) {
s <-
strsplit(x, ",") %>% unlist() %>% .[2];
}, simplify=TRUE, USE.NAMES=FALSE)
date_strings
head_strings
names_strings
filters_strings
date_strings %>% lubridate::dmy_hms(xd$DATE)()
?read.csv2
i
xd <- read.csv2(
fname,
header = FALSE,
sep = ",",
quote = "\"",
fill = TRUE,
skip = i[4] + 1,
row.names = NULL
)
head(xd)
xd <- xd[, c(1, 2, 3, 6)]
names(xd) <- c("NAME", "FILTER", "DATE", "HEAD")
xd <- xd[!is.na(xd$FILTER),]
xd$DATE <- lubridate::dmy_hms(xd$DATE)
xd$DATE <- lubridate::dmy(xd$DATE)
str(xd)
str(hm1)
xd$DATE <- lubridate::dmy(xd$DATE) %>% as.POSIXct()
?as.POSIXct()
xd$NAME %<>% remove_trailing_letter(.)
#xd$NAME %<>% remove_trailing_letter(.)
xd <- xd[!is.na(xd$HEAD),] # Remove NA values
str(xd)
hm <- list()
hm$xm <- xm
hm$xd <- xd
# Remove double filters and observations
hm %<>% hm_rm_dble_fltrs()
hm %<>% hm_rm_dble_obs()
library(menyanthes)
fname <- system.file("extdata","B38E0108001_1.csv",package="menyanthes")
hm3 <- hm_read_export_csv( fname )
hm3 <- hm_read_dino( fname )
str(hm3)
library(menyanthes)
fname <- system.file("extdata","B38E0108001_1.csv",package="menyanthes")
hm3 <- hm_read_dino( fname )
str(hm3)
head(hm3)
str(hm3$xm)
str(hm3$xd)
library(devtools)
use_data(hm3)
library(menyanthes)
hm3
getwd()
fname
attr(fname)
con <- file(fname)
attr(con)
attributes(con)
test <- C:/Users/NLCIMM/Documents/R/win-library/4.0/menyanthes/extdata"
test <- "C:/Users/NLCIMM/Documents/R/win-library/4.0/menyanthes/extdata"
con <- file(test)
attributes(con)
dir.exists(fname)
dir.exists(test)
?menyanthes
?menyanthes
?dir.exists
library(menyanthes)
## Functions in this package
- `hm_read_export_csv()`: Read export HydroMonitor file with ObservationWell data.
- `hm_read_export_csv2()`: Read export HydroMonitor file with ObservationWell data with missing header.
- `hm_read_dino()`: Read export Dino *_1.csv file with measured heads.
- `hm_read_dino_path`: Read all export Dino *_1.csv files with measured heads in specified folder.
- `hm_filter_on_year()`: Filter HydroMonitor ObservationWell data on year.
- `hm_calc_gxg()`: Calculate GxG's of HydroMonitor ObservationWell data.
- `hm_plot()`: Plot HydroMonitor ObservationWell data.
- `nr_obs_ratio()`: Ratio's (# observations in filter) / (average # of observations in monitoring well)
## Functions in this package
- hm_read_export_csv(): Read export HydroMonitor file with ObservationWell data.
- `hm_read_export_csv2()`: Read export HydroMonitor file with ObservationWell data with missing header.
- `hm_read_dino()`: Read export Dino *_1.csv file with measured heads.
- `hm_read_dino_path`: Read all export Dino *_1.csv files with measured heads in specified folder.
- `hm_filter_on_year()`: Filter HydroMonitor ObservationWell data on year.
- `hm_calc_gxg()`: Calculate GxG's of HydroMonitor ObservationWell data.
- `hm_plot()`: Plot HydroMonitor ObservationWell data.
- `nr_obs_ratio()`: Ratio's (# observations in filter) / (average # of observations in monitoring well)
## Get help
To get help on the functions in this package type a question mark before the function name, like `?hm_read_export_csv()`
path <- system.file("extdata","Grondwaterstanden_Put",package="menyanthes")
file.exists(path)
if (!dir.exists(path)) {
stop('Specified path does not exist.')
}
# Retreive all *.csv filenames
fnames <- list.files(
path = path,
pattern = glob2rx("*_1.csv"),
full.names = TRUE,
recursive = TRUE,
ignore.case = TRUE
) %>% as.matrix()
path.expand("~/foo")
path %<>% path.expand(.)
path
fnames <- list.files(
path = path,
pattern = glob2rx("*_1.csv"),
full.names = TRUE,
recursive = TRUE,
ignore.case = TRUE
) %>% as.matrix()
fnames
str(fnames)
nrow(fnames)
test <- apply(fnames, MARGIN = 1, hm_read_dino)
str(test)
test <- apply(fnames, MARGIN = 1, hm_read_dino) %>% hm_rbind()
test <- apply(fnames, MARGIN = 1, hm_read_dino)
hm_list <- c(test, hm_list)
hm_list <- c(test, NULL)
n <- length(hm_list)
N
n
hm <- NA
hm <- NA
hm <- list()
hm$xm <- rbind(hm_list[[1]]$xm, hm_list[[2]]$xm)
hm$xd <- rbind(hm_list[[1]]$xd, hm_list[[2]]$xd)
hm%xm
hm$xm
hm %<>% hm_rbind(hm_list[-c(1, 2)])
hm %<>% hm_rm_dble_obs() %>% hm_rm_dble_fltrs()
test <- apply(fnames, MARGIN = 1, hm_read_dino)
str(test)
length(test)
x <- hm_rbind(test)
hm_rbind()
?hm_rbind()
str(test[[1]])
str(test[[2]])
str(test[[3]])
str(test[[4]])
str(test[[5]])
str(test[[6]])
str(test[[7]])
str(test[[8]])
str(test[[9]])
str(test[[10]])
str(test[[11]])
str(test[[12]])
str(test[[13]])
str(test[[14]])
x <- hm_rbind(test[[1]],test)
str(x)
test
str(test)
test <- apply(fnames, MARGIN = 1, hm_read_dino) %>% unlist()
x <- hm_rbind(test)
test <- apply(fnames, MARGIN = 1, hm_read_dino)
test[[1]]
head(test[[1]])
str(test[[1]])
x <- hm_rbind(test[[1]],test[[2]])
str(x)
x <- hm_rbind(test[[1]],test)
x <- hm_rbind(...=NULL,test)
x <- hm_rbind(test[[1]],test)
str(x$xm)
test <- apply(fnames, MARGIN = 1, hm_read_dino)
str(test)
x <- list(test)
str(x)
typeof(test)
typeof(test)=="list"
x <- hm_rbind(hm_list =test)
str(x)
test <- apply(fnames, MARGIN = 1, hm_read_dino)
x <- hm_rbind(hm_list =test)
str(x)
str(test)
library(menyanthes)
path <- system.file("extdata","Grondwaterstanden_Put",package="menyanthes")
hm4 <- hm_read_dino_path( path )
library(devtools)
load_all()
hm4 <- hm_read_dino_path( path )
hm4
str(hm4)
path %<>% path.expand(.)
fnames <- list.files(
path = path,
pattern = glob2rx("*_1.csv"),
full.names = TRUE,
recursive = TRUE,
ignore.case = TRUE
) %>% as.matrix()
x <- apply(fnames, MARGIN = 1, hm_read_dino)
hm_rbind(x)
hm_rbind(x[[1]],hm_list=x)
test <- hm_rbind(x[[1]],hm_list=x)
str(test)
test <- hm_rbind(hm_list=x)
str(test)
x <- apply(fnames, MARGIN = 1, hm_read_dino)
length(x)
str(x)
x[[-c(1, 2)]]
x[-c(1, 2)]
length(x[-c(1, 2)])
hm_rbind(x)
hm_rbind(NULL,x)
length(x)
hm_rbind(NULL,hm_list=x)
test <- hm_rbind(NULL,hm_list=x)
str(x)
hm <- hm_rbind(hm1, hm2)
str(hm)
str(x)
list(hm1,hm2)
test <- list(hm1,hm2)
str(test)
hm_rbind <- function(hm_list) {
#hm_list <- c(list(...), hm_list)
n <- length(hm_list)
print(n)
hm <- NA
if (n == 1) {
hm <- hm_list[[1]]
} else if (n > 1) {
hm <- list()
hm$xm <- rbind(hm_list[[1]]$xm, hm_list[[2]]$xm)
hm$xd <- rbind(hm_list[[1]]$xd, hm_list[[2]]$xd)
if (n > 2) {
hm %<>% hm_rbind(hm_list[-c(1, 2)])
}
}
hm %<>% hm_rm_dble_obs() %>% hm_rm_dble_fltrs()
return(hm)
}
x <- apply(fnames, MARGIN = 1, hm_read_dino)
test <- hm_bind(x)
test <- hm_rbind(x)
x <- apply(fnames, MARGIN = 1, hm_read_dino)
hm_list <- x
hm <- NA
n <- length(hm_list)
n
hm <- hm_list[[1]]
for (i in 2:n) {
hm$xm %<>% rbind(hm_list[[i]]$xm)
hm$xd %<>% rbind(hm_list[[i]]$xd)
}
hm %<>% hm_rm_dble_obs() %>% hm_rm_dble_fltrs()
str(hm)
hm <- hm_rbind(list(hm1, hm2))
load_all()
hm <- hm_rbind(list(hm1, hm2))
load_all()
hm <- hm_rbind(list(hm1, hm2))
hm4 <- hm_read_dino_path( path )
str(hm4)
document()
library(devtools)
head(hm4$xm)
head(hm4$xd)
use_data(hm4)
document()
library(devtools)
library(menyanthes)
fname <- system.file("extdata","Dino_export_18032020.zip",package="menyanthes")
file.exists(fname)
fname
path <- system.file("extdata","Grondwaterstanden_Put",package="menyanthes")
file.exists(fname)
dir.exists(fname)
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
file.exists(fname)
fname
fname <- system.file("extdata","Dino_export_18032020.zip",package="menyanthes")
fname
library(menyanthes)
fname <- system.file("extdata","Dino_export_18032020.zip",package="menyanthes")
file.exists(fname)
fname
unzip(fname, files = "*_1.csv", overwrite = TRUE,
junkpaths = FALSE, exdir = "tmp")
unzip(fname, files = "Grondwatersamenstellingen_put/*_1.csv", overwrite = TRUE,
junkpaths = FALSE, exdir = "tmp")
unzip(fname, files = "Grondwaterstanden_Put/*_1.csv", overwrite = TRUE,
junkpaths = FALSE, exdir = "tmp")
unzip(fname, files = "*.pdf", overwrite = TRUE,
junkpaths = FALSE, exdir = "tmp")
unzip(fname, files = "Bericht van levering.pdf", overwrite = TRUE,
junkpaths = FALSE, exdir = "tmp")
fname
unzip(fname, files = "Bericht van levering.pdf", overwrite = TRUE,
junkpaths = FALSE, exdir = "tmp")
file.exists(fname)
fname
unzip(fname, overwrite = TRUE,
junkpaths = FALSE, exdir = "tmp")
fname
path.expand("~")
paste0(path.expand("~"),"/tmp")
unzip(fname, overwrite = TRUE,
junkpaths = FALSE, exdir = paste0(path.expand("~"),"/tmp"))
unzip(fname, overwrite = TRUE,
junkpaths = TRUE, exdir = paste0(path.expand("~"),"/tmp"))
fnames <- list.files(
path = path,
pattern = glob2rx("*_1.csv"),
full.names = TRUE,
recursive = TRUE,
ignore.case = TRUE
)
fnames
unzip(fname, overwrite = TRUE, files="Bericht van levering.pdf",
+       junkpaths = TRUE, exdir = paste0(path.expand("~"),"/tmp2"))
unzip(fname, overwrite = TRUE,
+       junkpaths = TRUE, exdir = paste0(path.expand("~"),"/tmp_hm_read_dino_zip"))
unzip(
fname,
overwrite = TRUE,
junkpaths = TRUE,
exdir = paste0(path.expand("~"), "/tmp_hm_read_dino_zip")
)
?list.files
extdir <- paste0(path.expand("~"), "/tmp_hm_read_dino_zip")
extdir
extdir <- paste0(path.expand("~"), "/tmp_hm_read_dino_zip")
unzip(
fname,
overwrite = TRUE,
junkpaths = TRUE,
exdir = extdir
)
unlink(extdir, recursive = TRUE, force = TRUE, expand = TRUE)
unzip(
fname,
overwrite = TRUE,
junkpaths = TRUE,
exdir = extdir
)
unlink(extdir, recursive = TRUE, force = TRUE, expand = TRUE)
unzip(
fname,
overwrite = TRUE,
junkpaths = TRUE,
exdir = extdir
)
extdir <- paste0(path.expand("~"), "/tmp_hm_read_dino_zip") # Temporary folder
unzip(
fname,
overwrite = TRUE,
junkpaths = TRUE,
exdir = extdir
)
hm <- hm_read_dino_path(extdir)
unlink(extdir, recursive = TRUE, force = TRUE, expand = TRUE) # Remove temporary folder
str(hm)
load_all()
fname <- system.file("extdata","Dino_export_18032020.zip",package="menyanthes")
hm5 <- hm_read_dino_zip( fname )
str(hm5)
use_data(hm5)
library(menyanthes)
library(devtools)
document()
?hm_read_dino_zip
fname <- system.file("extdata","Dino_export_18032020.zip",package="menyanthes")
file.exists(fname)
libPath
libPaths
.libPaths
.libPaths()
