ied <- which(x=="")-1
i
i[1]
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1])
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names(xm)
head(xm)
names(xm)
range(xm$LoggerType)
nms <- names(xm[2:])
nms <- names(xm[2:length(names(xm))])
nms
ncol(xm)
nms <- names(xm[2:ncol(xm)])
nms
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
names_xm
length(names_xm)
xm[,ncol(xm)] <- NULL
ncol(xm)
names(xm) <- names_xm
head(xm)
names(xm)
xm[2,]
xm[1,]
xm[1,1]
xm[1,2]
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
xm[1,2] <- NULL
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
xm[1,] <- NULL
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
xm[1,] <- NULL
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
str(xm)
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
str(xm)
xm[1,] <- NA
str(xm)
xm <- xm[-c(1),]
head(xm)
str(xm)
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$FilterNo <- as.numeric(xm$FilterNo)
str(xm)
library(dplyr)
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$FilterNo <- as.numeric(xm$FilterNo)
which(is.na(xm$FilterNo))
head(xm)
which(xm$FilterNo==NA)
tail(xm)
str(xm)
which(xm$FilterNo==NA)
tail(xm)
tail(xm)
head(xm)
tail(xm)
head(xm)
xm <- xm[!is.na(xm$FilterNo),]
tail(xm)
fname
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$FilterNo <- as.numeric(xm$FilterNo)
xm <- xm[!is.na(xm$FilterNo),]
tail(xm)
head(xm)
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$FilterNo <- as.numeric(xm$FilterNo)
xm <- xm[!is.na(xm$FilterNo),]
head(xm)
tail(xm)
xm$SurfaceLevel <- suppressWarnings(as.numeric(xm$SurfaceLevel))
head(xm)
str(xm)
tail(xm)
head(xm)
library(dplyr)
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ",", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
xm <- xm[!is.na(xm$FilterNo),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$SurfaceLevel <- suppressWarnings(as.numeric(xm$SurfaceLevel))
str(xm)
head(xm)
xm[1,]
library(dplyr)
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ",", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
xm <- xm[!is.na(xm$FilterNo),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm[1,]
?as.numeric
str(xm)
?gsub
gsub(",",".",xm$SurfaceLevel[1])
gsub(",",".",xm$SurfaceLevel)
xm$SurfaceLevel
xm$SurfaceLevel <- gsub(",",".",xm$SurfaceLevel)
xm$SurfaceLevel
library(dplyr)
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ",", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
xm <- xm[!is.na(xm$FilterNo),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$SurfaceLevel <- gsub(",",".",xm$SurfaceLevel) %>% as.numeric()
head(xm)
str(xm)
?read.csv
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
fill = TRUE, skip=i[1],  row.names=NULL)
str(xm)
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
i
# Determine column names of metadata and data
names_xm <- x[i[1]+1]
names_xm
# Determine column names of metadata and data
names_xm <- x[i[1]+1] %>% strsplit(";")
names_xm
names_xd <- x[i[2]+1] %>% strsplit(";")
names_xd
xm <- read.csv2(fname, header = FALS, sep = ";", quote = "\"",
fill = TRUE, skip=i[1]+2,  row.names=NULL)
xm <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[1]+2,  row.names=NULL)
str(xm)
names(xm) <- names_xm
str(xm)
head(xm)
xm <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[1]+2,  row.names=NULL)
head(xm)
ncol(xm)
length(names_xm)
str(xm_names)
str(names_xm)
?strsplit
# Determine column names of metadata and data
names_xm <- x[i[1]+1] %>% strsplit(";") %>% unlist()
names_xd <- x[i[2]+1] %>% strsplit(";") %>% unlist()
str(names_xm)
unique(xm$v19)
range(xm$V19)
xm$V19 <- NULL
names(xm) <- names_xm
head(xm)
str(xm)
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
str(xm)
xm <- xm[!is.na(xm$FilterNo),]
tail(xm)
str(xm)
library(lubridate)
xm$StartDateTime <- dmy_hm(xm$StartDateTime)
str(xm)
i
ism
i[1]+2
i[2]+2
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
ncol(xd)
head(xd)
xd <- xd[,c(1-4)]
head(xd)
xd <- xd[,c(1-4)]
head(xd)
xd <- xd[,c(1:4)]
head(xd)
1:4
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
names(xd) <- names_xd
str(xd)
xd$DateTime <- lubridate::dmy_hms(dm$DateTime)
xd$DateTime <- lubridate::dmy_hms(xd$DateTime)
str(xd)
tail(xd)
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
xd <- xd[!is.na(xd$FilterNo),]
names(xd) <- names_xd
xd$DateTime <- lubridate::dmy_hms(xd$DateTime)
tail(xd)
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
tail(is.na(xd$FilterNo))
is.na(xd$FilterNo)
str(xd)
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
names(xd) <- names_xd
xd <- xd[!is.na(xd$FilterNo),]
xd$DateTime <- lubridate::dmy_hms(xd$DateTime)
head(xd)
tail(xd)
