con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ",", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
xm <- xm[!is.na(xm$FilterNo),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$SurfaceLevel <- suppressWarnings(as.numeric(xm$SurfaceLevel))
str(xm)
head(xm)
xm[1,]
library(dplyr)
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ",", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
xm <- xm[!is.na(xm$FilterNo),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm[1,]
?as.numeric
str(xm)
?gsub
gsub(",",".",xm$SurfaceLevel[1])
gsub(",",".",xm$SurfaceLevel)
xm$SurfaceLevel
xm$SurfaceLevel <- gsub(",",".",xm$SurfaceLevel)
xm$SurfaceLevel
library(dplyr)
setwd("P:/410/372786_Update_Effectanalyse_Drentse_Weg/2. Do Work/Ontvangen gegevens/Peilbuizen/Meetnet_NMM")
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
ism <- i[1] + 3
iem <- i[2]-1
isd <- i[2]+3
ied <- which(x=="")-1
# Read Metadata
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
dec = ",", fill = TRUE, comment.char = "", skip=i[1],  row.names=NULL)
names_xm <- names(xm[2:ncol(xm)])
xm[,ncol(xm)] <- NULL
names(xm) <- names_xm
xm <- xm[-c(1),]
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
xm <- xm[!is.na(xm$FilterNo),]
xm$XCoordinate <- as.numeric(xm$XCoordinate)
xm$YCoordinate <- as.numeric(xm$YCoordinate)
xm$SurfaceLevel <- gsub(",",".",xm$SurfaceLevel) %>% as.numeric()
head(xm)
str(xm)
?read.csv
xm <- read.csv2(fname, header = TRUE, sep = ";", quote = "\"",
fill = TRUE, skip=i[1],  row.names=NULL)
str(xm)
fname <- "export_data_menyanthes_NMM_Esmeer_lopend.csv"
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con);
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1;
is_obs_well_file <- FALSE
while ( TRUE ) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if (( i==100 )||(found)) {
break
}
i <- i+1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
# Read all lines
con <- file(fname, "r")
x <- readLines(con, warn=FALSE)
close(con)
# Determine start end end line number of metadata and data.
i <- which(grepl("^;;",x))
i
# Determine column names of metadata and data
names_xm <- x[i[1]+1]
names_xm
# Determine column names of metadata and data
names_xm <- x[i[1]+1] %>% strsplit(";")
names_xm
names_xd <- x[i[2]+1] %>% strsplit(";")
names_xd
xm <- read.csv2(fname, header = FALS, sep = ";", quote = "\"",
fill = TRUE, skip=i[1]+2,  row.names=NULL)
xm <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[1]+2,  row.names=NULL)
str(xm)
names(xm) <- names_xm
str(xm)
head(xm)
xm <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[1]+2,  row.names=NULL)
head(xm)
ncol(xm)
length(names_xm)
str(xm_names)
str(names_xm)
?strsplit
# Determine column names of metadata and data
names_xm <- x[i[1]+1] %>% strsplit(";") %>% unlist()
names_xd <- x[i[2]+1] %>% strsplit(";") %>% unlist()
str(names_xm)
unique(xm$v19)
range(xm$V19)
xm$V19 <- NULL
names(xm) <- names_xm
head(xm)
str(xm)
xm$FilterNo <- suppressWarnings(as.numeric(xm$FilterNo))
str(xm)
xm <- xm[!is.na(xm$FilterNo),]
tail(xm)
str(xm)
library(lubridate)
xm$StartDateTime <- dmy_hm(xm$StartDateTime)
str(xm)
i
ism
i[1]+2
i[2]+2
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
ncol(xd)
head(xd)
xd <- xd[,c(1-4)]
head(xd)
xd <- xd[,c(1-4)]
head(xd)
xd <- xd[,c(1:4)]
head(xd)
1:4
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
names(xd) <- names_xd
str(xd)
xd$DateTime <- lubridate::dmy_hms(dm$DateTime)
xd$DateTime <- lubridate::dmy_hms(xd$DateTime)
str(xd)
tail(xd)
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
xd <- xd[!is.na(xd$FilterNo),]
names(xd) <- names_xd
xd$DateTime <- lubridate::dmy_hms(xd$DateTime)
tail(xd)
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
tail(is.na(xd$FilterNo))
is.na(xd$FilterNo)
str(xd)
xd <- read.csv2(fname, header = FALSE, sep = ";", quote = "\"",
fill = TRUE, skip=i[2]+2,  row.names=NULL)
xd <- xd[,c(1,2,3,4)]
names(xd) <- names_xd
xd <- xd[!is.na(xd$FilterNo),]
xd$DateTime <- lubridate::dmy_hms(xd$DateTime)
head(xd)
tail(xd)
library(devtools)
x <- read_menyanthes_csv( system.file("extdata","Topsoil1.csv",package="menyanthes"))
load_all()
.libPaths
.libPaths()
test <- read_menyanthes_csv( system.file("extdata","Topsoil1.csv",package="menyanthes"))
library(menyanthes)
test <- read_menyanthes_csv( system.file("extdata","Topsoil1.csv",package="menyanthes"))
?strsplit
?unlist()
?read.csv2
library(devtools)
use_package(lubridate)
file.exsts(system.file("extdata","hm_read_export_csv.csv",package="menyanthes"))
system.file("extdata","hm_read_export_csv.csv",package="menyanthes")
system.file("extdata","hm_read_export_csv.csv",package="menyanthes")
document()
library(menyanthes)
file.exsts(system.file("extdata","hm_read_export_csv.csv",package="menyanthes"))
file.exists(system.file("extdata","hm_read_export_csv.csv",package="menyanthes"))
file.exists(system.file("extdata","hm_read_export.csv",package="menyanthes"))
system.file("extdata","hm_read_export.csv",package="menyanthes")
system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes"))
str(x)
x <- read_menyanthes_csv( system.file("extdata","Topsoil1.csv",package="menyanthes")
)
str(x)
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes"))
str(x)
x <- read_menyanthes_csv( system.file("extdata","Topsoil1.csv",package="menyanthes")
)
str(x)
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes"))
str(x)
str(x$xm)
test <- data.frame(name=x$xm$Name)
test
names(x$xm)
load_all()
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes"))
str(x$xm)
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
# Read Header
# Check if this is not a export HydroMonitor - open data exchange file
con <- file(fname, "r")
x <- readLines(con, 1)
if (!(grepl("HydroMonitor - open data exchange file", x, fixed = TRUE))) {
close(con)
stop("This is not a export HydroMonitor - open data exchange file.")
}
# Check if this is not a export HydroMonitor - open data exchange file
i <- 1
is_obs_well_file <- FALSE
while (TRUE) {
x = readLines(con, 1)
found <- grepl("ObservationWell", x, fixed = TRUE)
if ((i == 100) || (found)) {
break
}
i <- i + 1
print(x)
}
if (!found) {
stop("This is not a export HydroMonitor file with ObservationWell data.")
}
close(con)
load_all()
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes"))
head(xm)
head(x$xm)
x <- read_menyanthes_csv( system.file("extdata","Topsoil1.csv",package="menyanthes"))
str(x$xv)
document()
document()
document()
document()
document()
load_all()
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes"))
str(x)
y <- hm_read_export_csv2( system.file("extdata","Topsoil1.csv",package="menyanthes"))
fname <- system.file("extdata","Topsoil1.csv",package="menyanthes")
fname
xm <-
read.csv(
fname,
header = TRUE,
skip = 1,
dec = ",",
sep = ";",
stringsAsFactors = FALSE
)
colnames(xm) <-
c("NAME",
"FILTER",
"X",
"Y",
"MV",
"TOP",
"BOT",
"MEASLEV",
"SUMPlEN",
"STARTDATE")
test <- data.frame(xm$Name, xm$FILTER, xm$X, xm$Y, xm$TOP, xm$BOT, xm$MV )
head(xm)
test <- data.frame(xm$NAME, xm$FILTER, xm$X, xm$Y, xm$TOP, xm$BOT, xm$MV )
head(test)
test <- data.frame(NAME=xm$NAME, FILTER=xm$FILTER, X=xm$X, Y=xm$Y, TOP=xm$TOP, BOT=xm$BOT, MV=xm$MV )
head(test)
# Lees stijghoogte gegevens
# Bepaal regelnummer van eerste blanco regel
s <- readLines(fname)
skip <- which(s == "")[1]
xd <-
read.csv(
fname,
header = TRUE,
skip = skip,
dec = ",",
sep = ";",
stringsAsFactors = FALSE
)
colnames(xd) <- c("NAME", "FILTER", "DATE", "HEAD")
xd$DATE %<>% lubridate::dmy_hm(.)
load_all()
x <- hm_read_export_csv2( system.file("extdata","Topsoil1.csv",package="menyanthes"))
str(x)
document()
document()
load_all()
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes"))
str(x)
y <- hm_read_export_csv2( system.file("extdata","Topsoil1.csv",package="menyanthes"))
str(y)
load_all()
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
)
str(x)
y <- hm_read_export_csv2( system.file("extdata","Topsoil1.csv",package="menyanthes"))
str(y)
load_all()
x <- hm_read_export_csv( system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
)
y <- hm_read_export_csv2( system.file("extdata","Topsoil1.csv",package="menyanthes"))
str(x)
str(y)
test <- hm_filter_on_year(x)
range(x$xd$DATE)
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm <- hm_read_export_csv( fname )
hm_filtered <- hm_filter_on_year( hm, minyear=2000)
hm_filterd
hm_filtered$xd
hm_filtered$xm
document()
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm <- hm_read_export_csv( fname )
gxg <- hm_calc_gxg(hm)
str(hm)
# Bereken GxG's en voeg de waarden toe aan de gegevens van de peilbuizen.
# Ref 'Een alternatieve GHG analyse' Drs. D.H. Edelman, Ir. A.S. Burger
# Stromingen 15 (2009) nummer 3 p29-34.
AHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(AHG=quantile(HEAD,.9985))
AHG <- hm$xd %>% dplyr::group_by(NAME, FILTER)
?quantile
# Bereken GxG's en voeg de waarden toe aan de gegevens van de peilbuizen.
# Ref 'Een alternatieve GHG analyse' Drs. D.H. Edelman, Ir. A.S. Burger
# Stromingen 15 (2009) nummer 3 p29-34.
AHG <- hm$xd %>% dplyr::group_by(NAME, FILTER) %>% dplyr::summarise(AHG=quantile(HEAD,.9985,na.rm = TRUE))
load_all()
gxg <- hm_calc_gxg(hm)
gxg
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
<- hm1 <- hm_read_export_csv( fname )
hm1 <- hm_read_export_csv( fname )
use_data(hm1)
document()
use_testthat()
use_test()
fname <- system.file("extdata","Topsoil1.csv",package="menyanthes")
hm2 <- hm_read_export_csv2( fname )
use_data(hm2)
document()
document()
library(devtools)
document()
?hm_read_export_cs2
?hm_read_export_csv2
document()
?hm_read_export_csv
document()
?hm_read_export_csv
document()
?hm_read_export_csv2
library(menyanthes)
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm1 <- hm_read_export_csv( fname )
str(hm1)
document()
?hm_read_export_csv
document()
?hm_read_export_csv
document()
?hm_read_export_csv
document()
?hm_read_export_csv
document()
?hm_read_export_csv
document()
?hm_read_export_csv
document()
?hm_read_export_csv
str(hm1)
document()
?hm_read_export_csv
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
?hm_filter_on_year()
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm <- hm_read_export_csv( fname )
hm_filtered <- hm_filter_on_year( hm, minyear=2000)
?hm_calc_gxg()
fname <- system.file("extdata","export_data_menyanthes.csv",package="menyanthes")
hm <- hm_read_export_csv( fname )
gxg <- hm_calc_gxg(hm)
str(gxg)
document()
?hm_calc_gxg()
document()
?hm_calc_gxg()
str(gxg)
document()
?hm_calc_gxg()
library(devtools)
library(menyanthes)
?menyanthes
?hm_calc_gxg()
document()
?hm_calc_gxg()
library(menyanthes)
?menyanthes
document()
library(devtools)
document()
?menyanthes()
document()
?menyanthes
library(devtools)
document()
?menyanthes
library(menyanthes)
?menyanthes
?hm_calc_gxg
library(menyanthes)
?menyanthes
document()
?menyanthes
